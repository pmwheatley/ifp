diff -Naur glulxe/string.c glulxe_new/string.c
--- glulxe/string.c	2007-02-15 09:14:00.000000000 -0800
+++ glulxe_new/string.c	2007-08-10 21:55:58.000000000 -0700
@@ -39,10 +39,10 @@
 static void filio_char_han(unsigned char ch);
 static void nopio_unichar_han(glui32 ch);
 static void filio_unichar_han(glui32 ch);
-#ifndef GLK_MODULE_UNICODE
+static void glkio_unichar_han(glui32 val);
+
 static void glkio_unichar_nouni_han(glui32 val);
-#define glk_put_char_uni(x) glkio_unichar_nouni_han(x)
-#endif /* GLK_MODULE_UNICODE */
+static void (*glk_put_char_uni_)(glui32 val) = NULL;
 
 static void dropcache(cacheblock_t *cablist);
 static void buildcache(cacheblock_t *cablist, glui32 nodeaddr, int depth,
@@ -55,8 +55,28 @@
   *rock = iosys_rock;
 }
 
+#ifdef GLK_MODULE_UNICODE
+
+static void stream_setup_unichar(void) {
+  if (glk_gestalt(gestalt_Unicode, 0))
+    glk_put_char_uni_ = glk_put_char_uni;
+  else
+    glk_put_char_uni_ = glkio_unichar_nouni_han;
+}
+
+#else /* GLK_MODULE_UNICODE */
+
+static void stream_setup_unichar(void) {
+  glk_put_char_uni_ = glkio_unichar_nouni_han;
+}
+
+#endif /* GLK_MODULE_UNICODE */
+
 void stream_set_iosys(glui32 mode, glui32 rock)
 {
+  if (!glk_put_char_uni_)
+    stream_setup_unichar();
+
   switch (mode) {
   default:
     mode = 0;
@@ -73,11 +93,7 @@
   case iosys_Glk:
     rock = 0;
     stream_char_handler = glk_put_char;
-#ifndef GLK_MODULE_UNICODE
-    stream_unichar_handler = glkio_unichar_nouni_han;
-#else
-    stream_unichar_handler = glk_put_char_uni;
-#endif /* GLK_MODULE_UNICODE */
+    stream_unichar_handler = glk_put_char_uni_;
     break;
   }
 
@@ -106,8 +122,6 @@
   enter_function(iosys_rock, 1, &val);
 }
 
-#ifndef GLK_MODULE_UNICODE
-
 static void glkio_unichar_nouni_han(glui32 val)
 {
   /* Only used if the Glk library has no Unicode functions */
@@ -116,8 +130,6 @@
   glk_put_char(val);
 }
 
-#endif /* GLK_MODULE_UNICODE */
-
 /* stream_num():
    Write a signed integer to the current output stream.
 */
@@ -293,7 +305,7 @@
           case 0x04: /* single Unicode character */
             switch (iosys_mode) {
             case iosys_Glk:
-              glk_put_char_uni(cab->u.uch);
+              glk_put_char_uni_(cab->u.uch);
               break;
             case iosys_Filter: 
               ival = cab->u.uch;
@@ -335,7 +347,7 @@
             switch (iosys_mode) {
             case iosys_Glk:
               for (tmpaddr=cab->u.addr; (ival=Mem4(tmpaddr)) != 0; tmpaddr+=4) 
-                glk_put_char_uni(ival);
+                glk_put_char_uni_(ival);
               cablist = tablecache.u.branches; 
               break;
             case iosys_Filter:
@@ -466,7 +478,7 @@
             ival = Mem4(node);
             switch (iosys_mode) {
             case iosys_Glk:
-              glk_put_char_uni(ival);
+              glk_put_char_uni_(ival);
               break;
             case iosys_Filter: 
               if (!substring) {
@@ -507,7 +519,7 @@
             switch (iosys_mode) {
             case iosys_Glk:
               for (; (ival=Mem4(node)) != 0; node+=4) 
-                glk_put_char_uni(ival);
+                glk_put_char_uni_(ival);
               node = Mem4(stringtable+8);
               break;
             case iosys_Filter:
@@ -615,7 +627,7 @@
           addr+=4;
           if (ival == 0)
             break;
-          glk_put_char_uni(ival);
+          glk_put_char_uni_(ival);
         }
         break;
       case iosys_Filter:
